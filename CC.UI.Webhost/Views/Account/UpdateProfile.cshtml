@using CC.UI.Webhost.Models;

@model Person

@{
    ViewBag.Title = "Update Profile";
}

<div class="title">
    update profile  |  @Html.ActionLink("my sessions", "SpeakerSessions", "Session")
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div>
    @if (@Model.LoginProvider == null || @Model.LoginProvider == "internal")
    {
        @Html.ActionLink("Change password", "ChangePassword", "Account")
        if (ViewBag.Message != null)
        {
            <h3 style="color: red">@ViewBag.Message</h3>
        }
    }

</div>

@using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")

    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.ImageUrl)

    <div class="field-name">
        @Html.LabelFor(m => m.FirstName)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.FirstName)
        @Html.ValidationMessageFor(m => m.FirstName)
    </div>
    
    <div class="field-name">
        @Html.LabelFor(m => m.LastName)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.LastName)
        @Html.ValidationMessageFor(m => m.LastName)
    </div>

    <div class="field-name">
        @Html.LabelFor(m => m.Title)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Title)
        @Html.ValidationMessageFor(m => m.Title)
    </div>

    <div class="field-name">
        @Html.LabelFor(m => m.Bio)
    </div>
    <div class="editor-multiline-field">
        @Html.TextAreaFor(m => m.Bio)
        @Html.ValidationMessageFor(m => m.Bio)
    </div>
            
    <div class="field-name">
        @Html.LabelFor(m => m.Blog)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Blog)
        @Html.ValidationMessageFor(m => m.Blog)
    </div>            
            
    <div class="field-name">
        @Html.LabelFor(m => m.Website)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Website)
        @Html.ValidationMessageFor(m => m.Website)
    </div>           

         <div class="field-name">
        @Html.LabelFor(m => m.Location)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Location)
        @Html.ValidationMessageFor(m => m.Location)
    </div>

    <div class="field-name">
        @Html.LabelFor(m => m.TShirtSizeId)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.TShirtSizeId, (IEnumerable<SelectListItem>)ViewBag.TShirtSizes)
        @Html.ValidationMessageFor(m => m.TShirtSizeId)
    </div>

    <div class="field-name">
        @Html.LabelFor(m => m.Twitter)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(m => m.Twitter)
        @Html.ValidationMessageFor(m => m.Twitter)
    </div>
    
    <div class="field-name">
        @Html.LabelFor(m => m.Avatar)
    </div>
    
    <div class="editor-field" title="Upload Avatar">
        <p>Use Twitter avatar?&nbsp;<input type="checkbox" id="cbTwitter" name="cbTwitter" checked="checked" /></p>
        <p>or</p>
        <p>upload avatar (100px * 100px or similar proportions)<br />
            <input type="file" id="Avatar" name="Avatar" size="23"/>
        </p>
    </div>
    
    <div>
        <input type="submit" value="Update" class="action-button"/>
    </div>
    
    <br/>
}

