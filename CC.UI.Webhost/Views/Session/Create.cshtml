@using CC.UI.Webhost.Models;

@model Session

@{
    ViewBag.Title = "New Session";
}

<div class="title">new session | @Html.ActionLink("back", "SpeakerSessions")</div>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (ViewBag.Event.IsSpeakerRegistrationOpen)
{

    
using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="field-name">
        @Html.LabelFor(model => model.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>
    
    <div class="field-name">
        @Html.LabelFor(model => model.Level)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Level, new SelectList(new List<int>() { 100, 200, 300 }))
        @Html.ValidationMessageFor(model => model.Level)
    </div>
    
    <div class="field-name">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-multiline-field">
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <div class="field-name">
        @Html.LabelFor(model => model.TagID)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.TagID, new SelectList(ViewBag.Tags, "ID", "TagName"))
    </div>
    <br />
    
    <div>
        <input type="submit" value="Create" class="action-button"/>
    </div>
    
    <br />
}
}
else
{ 
    <div>@string.Format("Sorry, session registration is now closed")</div>
}
<script type="text/javascript">
    $("input:text:visible:first").focus();
</script>